AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  An AWS Serverless Application that uses the ASP.NET Core framework running in
  Amazon Lambda.

Globals:
  Api:
    Cors: 
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"

Resources:
  A2API:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Auth:
        DefaultAuthorizer: CognitoAuthPool
        Authorizers:
          CognitoAuthPool:
            UserPoolArn: 'arn:aws:cognito-idp:ap-southeast-2:869393488965:userpool/ap-southeast-2_5hWNYv9xm'
        AddDefaultAuthorizerToCorsPreflight: false

  AspNetCoreFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: 'A2.API::A2.API.LambdaEntryPoint::FunctionHandlerAsync'
      Runtime: dotnetcore2.1
      CodeUri: ''
      MemorySize: 1024
      Timeout: 30
      Role: null
      Policies:
        - AWSLambdaFullAccess
        - AWSLambdaDynamoDBExecutionRole
      Environment:
        Variables:
          ASPNETCORE_ENVIRONMENT: "Development"
      Events:
        
        GetApprovalsForUser:
          Type: Api
          Properties:
            Path: '/api/approvals'
            Method: Get
            RestApiId: !Ref "A2API"

        AddUpdateApproval:
          Type: Api
          Properties:
            Path: '/api/approvals'
            Method: Post
            RestApiId: !Ref "A2API"



        GetFile:
          Type: Api
          Properties:
            Path: '/api/files'
            Method: Get
            RestApiId: !Ref "A2API"

        PostFile:
          Type: Api
          Properties:
            Path: '/api/files'
            Method: Post
            RestApiId: !Ref "A2API"



        GetLeaveRequests:
          Type: Api
          Properties:
            Path: '/api/leaveRequests'
            Method: Get
            RestApiId: !Ref "A2API"

        AddLeaveRequest:
          Type: Api
          Properties:
            Path: '/api/leaveRequests'
            Method: Post
            RestApiId: !Ref "A2API"



        GetAllUsers:
          Type: Api
          Properties:
            Path: '/api/users/list'
            Method: Get
            RestApiId: !Ref "A2API"

        GetUser:
          Type: Api
          Properties:
            Path: '/api/users'
            Method: Get
            RestApiId: !Ref "A2API"

        CreateUser:
          Type: Api
          Properties:
            Path: '/api/users'
            Method: Post
            RestApiId: !Ref "A2API"

        UpdateUser:
          Type: Api
          Properties:
            Path: '/api/users'
            Method: Put
            RestApiId: !Ref "A2API"

Outputs:
  ApiURL:
    Description: raw API endpoint URL for this environment
    Value: !Sub 'https://${A2API}.execute-api.${AWS::Region}.amazonaws.com/Dev/'
